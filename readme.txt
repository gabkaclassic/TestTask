1) Версия JDK: 19 bla bla bla
2) Инструкция по запуску:
    Предварительно сохраняем файлы с вхожными данными в дирекорию
    out/artifacts/TestTask_jar/files
    (причёмsadfsadf в параметрах для запуска необходимо указывать лишь имена файлов (без абсолютного пути). Если, конечно, в указанной директории не была создана поддиректория, в которую будут помещены файлы, в таком случае необходимо указывать путь до файлов относительно директории out/artifacts/TestTask_jar/files.
    Пример: сохраняем файлы in0.txt и in1.txt в указаннкю папку, после чего в параметрах запуска указываем лишь in0.txt in1.txt.
    Однако при создании в этой же директории ещё одной с именем test_1, в которую будут помещены файлы с теми же именами, в параметрах запуска необходимо указать test_1/in0.txt test_1/in1.txt).
    Файл с результатом будет создан в директории out/artifacts/TestTask_jar/files
    В директории
    out/artifacts/TestTask_jar
    в терминале запускаем команду
    java -jar TestTask.jar <флаги запуска (-i/-s, -a/-d)> <файл для результата> <входные файлы через пробел>
    (либо из корневой директории проекта с добавлением к имени jar-файла вышеуказанного пути)
3) Особенности реализации, не уточнённые в задании:
   - Пустые файлы с входными данными игнорируются (при этом вывожится сообщение, в каких именно файлах пропущены данные)
   - Если в файле присутствуют ошибочные данные (нарушающие порядок сортировки) - они будут проигнорированы при слиянии 2 файлов
   (Например в последовательности 1 2 15 4 10 16 при натуральном (asc) порядке сортировки будут проигнорированы элементы 4 и 10, так как они стоят не на своих местах)
   - При наличии в файле строки с пробельными символами она будет проигнорирована
   - При наличии в файле с целыми числами строки, последнее число перед строкой будет считаться последним в файле
   - Во время работы программы создаются промежуточные временные файлы, которые удаляются по мере их ненадобности. В связи с этим при запуске программы на машине должно быть свободное место в постоянной памяти


